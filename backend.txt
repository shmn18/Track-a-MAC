#!/usr/bin/env perl
use SNMP::Info;
use Parallel::ForkManager;
use Time::HiRes qw(sleep gettimeofday);
use DBI;
use POSIX;

my $tid, $tid1;
my $manager = new Parallel::ForkManager( 20 );
my @devices;
my $driver = "SQLite";
my $database = "project.sqlite3";
my $dsn = "DBI:$driver:dbname=$database";
my $user = "";
my $passwd = "";
my $dbh = DBI->connect($dsn, $user, $passwd, { RaiseError => 1 }) || die $DBI::errstr;

while(2<3){
	my $t1 = time;
	@devices =();
	my $stmt = qq(SELECT * from listdevs;);
	my $sth = $dbh->prepare( $stmt );
	my $rv = $sth->execute() || die $DBI::errstr;

	if($rv < 0) {
	   print $DBI::errstr;
	}
	while(my @row = $sth->fetchrow_array()) {
	      push @device,"$row[1]:$row[2]:$row[3]:$row[4]";
	}



	foreach my $device (@devices) {
		 
	      	 $manager->start and next;
		     my @each = split /:/, $device;
		

		
			
			my $fail =0;
			
			my $datestring = strftime "%y %m %d %H:%M:%S %Y", localtime;
			my @date = split / /, $datestring;
		    my @hours = split /:/, $date[3];
			my $h = $hours[0]+2;

			my $wanted = "$date[0]$date[1]$date[2]-$h:$hours[1]:$hours[2]";
			
			
			my $stmt = qq(SELECT * from listdevs where ip="$each[0]" AND version="$each[3]";);
			my $sth = $dbh->prepare( $stmt );
			my $rv = $sth->execute() || die $DBI::errstr;

			if($rv < 0) {
				print $DBI::errstr;
			}
			while(my @row = $sth->fetchrow_array()) {
				if($row[5] eq '') {
					
					my $tid = "firstProbe_$wanted";
					my $stmt = qq(UPDATE listdevs set firstprobe = "$tid",latestprobe="latestProbe_$wanted" where ip="$each[0]" AND version="$each[3]";);
					my $rv = $dbh->do($stmt) || die $DBI::errstr;

					if( $rv < 0 ) {
					   	print $DBI::errstr;
					} 
			}
				else{
					my $tid1 = "latestProbe_$wanted";
					my $stmt = qq(UPDATE listdevs set latestprobe = "$tid1" where ip="$each[0]" AND version="$each[3]";);
					my $rv = $dbh->do($stmt) or die $DBI::errstr;

					if( $rv < 0 ) {
					   	print $DBI::errstr;
					} 
			}
			      
			}

			my $bridge = new SNMP::Info ( 
						    AutoSpecify => 1,
						    Debug       => 1,
						    DestHost    => "$each[0]",
						    Community   => "$each[2]",
						    Version     => "$each[3]",
						    timeout     => 5,
						    retries     => 2
						    ) or do {$fail = 1;};
			
			print $fail; 
			
			if ($fail==0){
				my $stmt = qq(UPDATE listdevs set fail="0" where ip="$each[0]" AND version="$each[3]";);
				my $rv = $dbh->do($stmt) || die $DBI::errstr;

				if( $rv < 0 ) {
					print $DBI::errstr;
				}
				my $interfaces = $bridge->interfaces();

				my $mac_f     = $bridge->mac_f();

				my $port_f    = $bridge->port_f();

				my $index_bd   = $bridge->index_bd();


				my $vlan = $bridge->qb_i_vlan();

				foreach my $index_f (keys %$mac_f){
					   my $mac   = $mac_f->{$index_f};
					   my $bp_id = $port_f->{$index_f};
					   my $iid   = $index_bd->{$bp_id};
					   my $port  = $interfaces->{$iid};
					   my $vlan_id= $vlan->{$iid};
					   if(!$vlan_id){
					   	    $vlan_id = 1;
						}
					my $stmt = qq(CREATE TABLE IF NOT EXISTS list(ip TEXT NOT NULL,vlan TEXT NOT NULL,port TEXT,macs TEXT););

					my $rv = $dbh->do($stmt);
					if($rv < 0) {
					   	print $DBI::errstr;
					} 
					
				    
					my $x =0;
					my $stmt = qq(SELECT * from list;);
					my $sth = $dbh->prepare( $stmt );
					my $rv = $sth->execute() or die $DBI::errstr;

					if($rv < 0) {
					   print $DBI::errstr;
					}
					while(my @row = $sth->fetchrow_array()) {
					      	
						if($row[0] eq "$each[0]" and $row[1] eq "VLAN$vlan_id" and $row[2] eq "Port$port" and $row[3] eq "$mac"){
							$x = $x +1;
						}
				       	
					}
					if($x == 0){
						my $y =0;
						my $stmt = qq(SELECT * from list;);
						my $sth = $dbh->prepare( $stmt );
						my $rv = $sth->execute() || die $DBI::errstr;

						if($rv < 0) {
						   print $DBI::errstr;
						}
						while(my @row = $sth->fetchrow_array()) {
							if($row[0] eq "$each[0]" and $row[1] eq "VLAN$vlan_id" and $row[2] eq "Port$port"){
							$y = $y +1;
							}
						}
						if($y == 0){
							my $stmt = qq(INSERT INTO list (ip,vlan,port,macs) VALUES ('$each[0]', 'VLAN$vlan_id',  'Port$port', '$mac'););
							my $rv = $dbh->do($stmt) || die $DBI::errstr;
						}
						else{	
							my $stmt = qq(SELECT * from list WHERE ip = '$each[0]' AND vlan = 'VLAN$vlan_id' AND port = 'Port$port';);
							my $sth = $dbh->prepare( $stmt );
							my $rv = $sth->execute() || die $DBI::errstr;

							if($rv < 0) {
							   print $DBI::errstr;
							}
							$z =0;
							while(my @row = $sth->fetchrow_array()) {
								if (index($row[3], $mac) == -1) {
    								$mac = "$mac $row[3]" ;
									$z = $z+1;
								} 
								
							}
							if($z!=0){
								my $stmt = qq(UPDATE list SET macs = '$mac' WHERE ip = '$each[0]' AND vlan = 'VLAN$vlan_id' AND port = 'Port$port'; );
								my $rv = $dbh->do($stmt) || die $DBI::errstr;
							}
						}
					}		
				}

			}
			else {
				my $stmt = qq(SELECT * from listdevs where ip="$each[0]" AND version="$each[3]";);
				my $sth = $dbh->prepare( $stmt );
				my $rv = $sth->execute() || die $DBI::errstr;

				if($rv < 0) {
				   	$DBI::errstr;
				}
				while(my @row = $sth->fetchrow_array()) {
					if ($row[7] eq '') {
						$a = 1;
					}
					else{
						$a = $row[7]+1;
					}
				}
				my $stmt = qq(UPDATE listdevs set fail="$x" where ip="$each[0]" AND version="$each[3]";);
				my $rv = $dbh->do($stmt) || die $DBI::errstr;

				if( $rv < 0 ) {
					print $DBI::errstr;
                }
			
			}
			
				
			
	$manager->finish;
	}
	my $t2=time;
	sleep(60-$t2+$t1);
}
